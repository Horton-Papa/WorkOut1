summarise(group_by(filter(nba, position == "PF", experience == 5 | experience == 10), std_dev = sd(age), avergae= mean(age), player, team))
summarise(group_by(filter(nba, position == "PF", experience == 5 | experience == 10), player, team), std_dev = sd(age), average= mean(age))
summarise(group_by(filter(nba, position == "PF", experience == 5 | experience == 10), player, team) std_dev = sd(age), average= mean(age))
summarise(
group_by(
filter(nba, position == "PF"| experience == 5 | experience == 10), player, team),
std_dev = sd(age), average= mean(age))
summarise(
group_by(
filter(nba, position == "PF", experience == 5, experience == 10), player, team),
std_dev = sd(age), average= mean(age))
summarise(
group_by(
filter(nba, position == "PF", experience == 5| experience == 10), player, team),
std_dev = sd(age), average= mean(age))
summarise(
filter(nba, position == "PF", experience == 5| experience == 10)
std_dev = sd(age), average= mean(age))
summarise(
filter(nba, position == "PF", experience == 5| experience == 10),
std_dev = sd(age), average= mean(age))
summarise(
filter(nba, position == "PF", experience == 5| experience == 10))
filter(nba, position == "PF", experience == 5| experience == 10)
summarise(filter(nba, position == "PF", experience == 5| experience == 10), age_mean = mean(age), sd(age))
summarise(filter(nba, position == "PF", experience == 5| experience == 10),
age_mean = mean(nba$age), std_deviation = sd(nba$age))
summarise(filter(nba, position == "PF", experience == 5| experience == 10),
age_mean = mean(age), std_deviation = sd(age))
summarise(filter(nba, position == "PF", experience == 5| experience == 10),
age_mean = mean(nba$age), std_deviation = sd(nba$age))
summarise(filter(nba, position == "PF", experience == 5| experience == 10),
age_mean = mean(age), std_deviation = sd(age))
summarise(group_by(filter(nba, position == "PF", experience == 5| experience == 10),
player)age_mean = mean(age), std_deviation = sd(age))
summarise(group_by(
filter(nba, position == "PF", experience == 5| experience == 10),
player), age_mean = mean(age), std_deviation = sd(age))
summarise(filter(nba, position == "PF", experience == 5| experience == 10),
age_mean = mean(age), std_deviation = sd(age))
knitr::opts_chunk$set(echo = TRUE, fig.path = '../Images/')
library(dplyr)
library(ggplot2)
library(tidyverse)
ggplot(gsw, aes(x = height, y = weight))
ggplot(gsw, aes(x = height, y = weight)) + geom_point()
plot(gsw$height, gsw$weight)
ggplot(gsw, aes(x = height, y = weight)) + geom_point()
plot(gsw$height, gsw$weight)
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight)) + geom_text()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = player)
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = player) + geom_text()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(player)) + geom_text()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(player))) + geom_text()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(player)) + geom_text()
gsw
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(gsw)) + geom_text()
#scatterplt of gsw using point as a geom
ggplot(gsw, aes(x = height, y = weight)) + geom_point()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(gsw)) + geom_text()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(gsw))
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight),
label = rownames(gsw))
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight))
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) + geom_text()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) + geom_text(size = 2)
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) + geom_text(size = 5)
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) + geom_text(size = 3)
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) +
geom_text(size = 3) +
xlim = c(75, 85) +
ylim = c(215, 275)
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) +
geom_text(size = 3) +
xlim(c(75, 85)) +
ylim(c(215, 275))
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) +
geom_text(size = 3) +
xlim(c(80, 85)) +
ylim(c(215, 275))
golden_state = filter(nba, nba$team == 'GSW')
golden_state
nba[nba$team == 'GSW']
nba[nba$team == 'GSW, ']
nba[team == 'GSW, ']
nba[nba$team == 'GSW', ]
#Create a variable for subsetting the GSW
golden_state = filter(nba, nba$team == 'GSW')
golden_state
nba[nba$team == 'GSW', ]
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label()
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label(check_overlap = TRUE)
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) +
geom_text(size = 3) +
xlim(c(80, 86)) +
ylim(c(215, 275))
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) +
geom_text(size = 3) +
xlim(c(80, 85)) +
ylim(c(215, 275))
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label() +
xlab(c(70,90))
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label() +
xlab(c(65,90))
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label() +
xlim(c(65,90))
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label() +
xlim(c(72,86))
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label() +
xlim(c(72,86)) +
ylim(c(174,280))
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(nba$salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(nba$salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(nba$salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(nba$salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(nba$salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = salary)) +
geom_density() +
geom_vline(aes(xintercept = mean(nba$salary)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = points2)) +
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed'
size - 1
ggplot(nba, aes(x = points2)) +
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed',
size - 1
)
ggplot(nba, aes(x = points2)) +
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed',
size = 1
)
#create the histogram with bin width 50
ggplot(nba, aes(x = points2)) +
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed',
size = 1
)
#create the histogram with bin width 50
ggplot(nba, aes(x = points2)) +
xlab('2 POints Made')
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = points2)) +
xlab('2 POints Made')+
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = points2)) +
xlab('2 Points Made')+
geom_histogram(binwidth = 50) +
geom_vline(aes(xintercept = mean(points2)),
color = 'blue',
linetype = 'dashed',
size = 1
)
ggplot(nba, aes(x = position)) +
geom_bar()
ggplot(nba, aes(x = position)) +
geom_col()
ggplot(nba, aes(x = position)) +
geom_bar()
ggplot(nba, aes(x = position)) +
geom_col()
ggplot(nba, aes(x = position)) +
geom_bar()
#scatterplt of gsw using point as a geom
ggplot(gsw, aes(x = height, y = weight)) + geom_point()
#scatterplot using names of players as the display
ggplot(gsw, aes(x = height, y = weight, label = player)) +
geom_text(size = 3) +
xlim(c(80, 85)) +
ylim(c(215, 275))
#Create a variable for subsetting the GSW
golden_state = filter(nba, team == 'GSW')
ggplot(golden_state, aes(x = height, y = weight, label = player)) +
geom_label() +
xlim(c(72,86)) +
ylim(c(174,280))
View(golden_state)
#filter players with position Center
nba_center = filter(nba, position =='C')
View(nba_center)
#Create the scatter plot
pts_vs_sal = ggplot(nba_center, aes(x = experience, y = salary)) +
geom_point()
View(pts_vs_sal)
#add regression line with geom_smooth
pts_vs_sal + geom_smooth()
#add regression line with geom_smooth
pts_vs_sal + geom_smooth(method = 'lm')
#add regression line with geom_smooth
pts_vs_sal + geom_smooth(method = 'lm', se = FALSE)
#add regression line with geom_smooth
pts_vs_sal + geom_smooth(method = 'lm')
#create a scatter plot
ggplot(nba_center, aes(x = experience, y = salary)) +
geom_point() +
geom_smooth(method = 'loess')
ggplot(nba_center, aes(x = experience, y = salary)) +
geom_point() +
geom_smooth()
#create a scatter plot
ggplot(nba_center, aes(x = experience, y = salary)) +
geom_point() +
geom_smooth(method = 'loess')
ggplot(nba_center, aes(x = experience, y = salary)) +
geom_point() +
geom_smooth()
facet_wrap(~position)
ggplot(nba, aes(x = experience, y = salary)) +
geom_point()+
facet_wrap(~position)
ggplot(nba, aes(x = experience, y = salary)) +
geom_point()+
facet_wrap(position)
ggplot(nba, aes(x = experience, y = salary)) +
geom_point()+
facet_wrap(position~.)
ggplot(nba, aes(x = experience, y = salary)) +
geom_point()+
facet_wrap(position~)
ggplot(nba, aes(x = experience, y = salary)) +
geom_point()+
facet_wrap(position~.)
ggplot(nba, aes(x = experience, y = salary)) +
geom_point()+
facet_wrap(~position)
ggplot(nba, aes(x = experience, y = salary)) +
facet_wrap(~team)
ggplot(nba, aes(x = experience, y = salary)) +
facet_grid(~team)
ggplot(nba, aes(x = experience, y = salary)) +
facet_wrap(~team)
ggplot(nba, aes(x = experience, y = salary))
ggplot(nba, aes(x = experience, y = salary)) +
geom_point() +
facet_wrap(~team)
ggplot(nba, (x=age)) +
geom_density()+
facet_wrap(~team)
ggplot(nba, aes(x=age)) +
geom_density()+
facet_wrap(~team)
ggplot(nba, aes(x=age)) +
geom_density()+
facet_grid(~team)
ggplot(nba, aes(x=age)) +
geom_density()+
facet_wrap(~team)
ggplot(nba, aes(x=height, y=weight)) +
geom_point() +
facet_wrap(position)
ggplot(nba, aes(x=height, y=weight)) +
geom_point() +
facet_wrap(~position)
ggplot(nba, aes(x = height, y = weight)) +
geom_point()
ggplot(nba, aes(x = height, y = weight)) +
geom_point() +
geom_density()
ggplot(nba, aes(x = height, y = weight)) +
geom_point() +
geom_density_2d()
ggplot(nba, aes(x = height, y = weight)) +
geom_point() +
geom_density_2d() +
facet_wrap(~position)
ggplot(golden_state, aes(x = experience, y = salary)) +
geom_point() +
theme_bw()
View(golden_state)
nba, position == 'C'),
ggplot(
nba_center,
aes(x = experience, y = salary)
) +
geom_point() +
geom_smooth(method = 'loess') +
theme_minimal()
#scatter plot of experience and salary of all centers and add regression line
ggplot(
nba_center,
aes(x = experience, y = salary)
) +
geom_point(color = team) +
geom_smooth(method = 'loess') +
theme_minimal()
ggplot(
nba_center,
aes(x = experience, y = salary)
) +
geom_point(aes(color = team)) +
geom_smooth(method = 'loess') +
theme_minimal()
ggplot(
nba_center,
aes(x = experience, y = salary)
) +
geom_point(aes(color = team)) +
geom_smooth(method = loess) +
theme_minimal()
ggplot(
nba_center,
aes(x = experience, y = salary)
) +
geom_point(aes(color = team)) +
geom_smooth(method = loess, se = FALSE) +
theme_minimal()
knitr::opts_chunk$set(echo = TRUE, fig.path =)
getwd()
knitr::opts_chunk$set(echo = TRUE, fig.path = 'report')
plot(1,1)
knitr::opts_chunk$set(echo = TRUE, fig.path = '/report')
plot(1,1)
knitr::opts_chunk$set(echo = TRUE, fig.path = '../report')
plot(1,1)
knitr::opts_chunk$set(echo = TRUE, fig.path = '../report')
plot(1,1)
knitr::opts_chunk$set(echo = TRUE, fig.path = 'report')
knitr::opts_chunk$set(echo = TRUE, fig.path = '/workout01-horton-papa_files')
getwd()
plot(1,1)
knitr::opts_chunk$set(echo = TRUE, fig.path = 'workout01-horton-papa_files')
knitr::opts_chunk$set(echo = TRUE, fig.path = 'reworkout01-horton-papa_files')
getwd()
knitr::opts_chunk$set(echo = TRUE, fig.path = 'report/workout01-horton-papa_files')
knitr::opts_chunk$set(echo = TRUE, fig.path = 'workout01-horton-papa_files/')
knitr::opts_chunk$set(echo = TRUE, fig.path = 'workout01-horton-papa_files/')
library(ggplot2)
library(dplyr)
library(tidyverse)
getwd()
getwd()
setwd(dir = '~/desktop/stat133/workouts/workout1')
getwd()
setwd(dir = '~/desktop/stat133/workouts/workout1/data')
nba = read_csv()
nba
View(nba)
nba = read_csv('../data/nba2018.csv',
col_types = cols(
experience = col_character(),
position = col_factor(
levels = c("C", "PF", "PG", "SF", "SG")
)))
View(nba)
summary(nba)
str(nba)
View(nba)
setwd(dir = '~/desktop/stat133/workouts/workout1/code')
nba = read_csv('../data/nba2018.csv',
col_types = cols(
experience = col_character(),
position = col_factor(
levels = c("C", "PF", "PG", "SF", "SG")
)))
View(nba)
nba = read_csv('../data/nba2018.csv',
col_types = cols(
experience = col_character(),
position = col_factor(
levels = c("C", "PF", "PG", "SF", "SG")
)))
nba
nba$salary
nba$salary = nba$salary/1000000
nba$salary = nba$salary/1000000
nba$salary
nba$salary = nba$salary/1000000
View(nba)
level(nba$position) = c("Center", 'power_fwd', 'point_guard', 'point_guard', 'small_forward','shoot_guard')
levels(nba$position) = c("Center", 'power_fwd', 'point_guard', 'point_guard', 'small_forward','shoot_guard')
nba$position
View(nba)
#add column to nba tibble
mutate(nba, missed_fg = field_goals_atts - field_goals)
#add column to nba tibble
mutate(nba, missed_fg = field_goals_atts - field_goals)
View(nba)
mutate(nba, missed_fg = field_goals_atts - field_goals)
View(nba)
#Title: NBA 2018 teams table
#Description: This code creates a team table from nba2018.csv
library(ggplot2)
library(dplyr)
library(tidyverse)
setwd(dir = '~/desktop/stat133/workouts/workout1/code')
nba = read_csv('../data/nba2018.csv',
col_types = cols(
experience = col_character(),
position = col_factor(
levels = c("C", "PF", "PG", "SF", "SG")
)))
#transform salary
nba$salary = nba$salary/1000000
#change position factor levels
levels(nba$position) = c("Center", 'power_fwd', 'point_guard', 'point_guard', 'small_forward','shoot_guard')
#add column to nba tibble
mutate(nba, missed_fg = field_goals_atts - field_goals)
nba
View(nba)
efficiency = (points + total_rebounds + assists + steals + blocks - missed_fg - missed_ft - turnovers)/ games
nba = mutate(nba,
missed_fg = field_goals_atts - field_goals,
missed_ft = points1_atts - points1,
efficiency = (points + total_rebounds + assists + steals + blocks - missed_fg - missed_ft - turnovers)/ games
)
nba = mutate(nba,
missed_fg = field_goals_atts - field_goals,
missed_ft = points1_atts - points1,
efficiency = (points + total_rebounds + assists + steals + blocks - missed_fg - missed_ft - turnovers)/ games
)
View(nba)
summary(nba)
sink('../output/efficiency-summary.txt')
summary(nba$efficiency)
sink()
